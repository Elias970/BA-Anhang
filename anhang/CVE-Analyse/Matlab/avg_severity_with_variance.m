filePaths = {'cvelists/moodle_cves.csv', 'cvelists/ilias_cves.csv', 'cvelists/stud-ip_cves.csv'};

avg_severities = [];
highest_severities = [];
lowest_severities = [];
std_devs = [];

for i = 1:length(filePaths)
    data = readtable(filePaths{i}, 'VariableNamingRule', 'preserve', 'Delimiter', ';');
    severity = data.Schwere;
    % omitnan um nicht numerische Werte zu ignorieren
    avg_severities = [avg_severities; mean(severity, 'omitnan')];
    highest_severities = [highest_severities; max(severity, [], 'omitnan')];
    lowest_severities = [lowest_severities; min(severity, [], 'omitnan')];
    std_devs = [std_devs; std(severity, 'omitnan')];
end


temp = std_devs(1);
std_devs(1) = std_devs(2);
std_devs(2) = temp;

% Ergebnisse runden
avg_severities = round(avg_severities, 2);
highest_severities = round(highest_severities, 2);
lowest_severities = round(lowest_severities, 2);
std_devs = round(std_devs, 2);

% Plot
figure;
b = bar(avg_severities);
set(gca, 'XTickLabel', {'Moodle', 'ILIAS', 'Stud.IP'});
ylabel('Durchschnittliche Schwere');
title('Durchschnittliche Schwere der CVEs');
ylim([0 10]);
grid on;

% Numerische Ergebnisse in Balkendiagramm anzeigen
xtips = b.XEndPoints;
ytips = b.YEndPoints;
labels = string(avg_severities);
text(xtips, ytips, labels, 'HorizontalAlignment', 'center', 'VerticalAlignment', 'bottom');

% Varianz, h√∂chste und tiefste Werte anzeigen
for i = 1:length(xtips)
    text(xtips(i), ytips(i)-0.5, sprintf('Varianz: %.2f\nMax: %.2f\nMin: %.2f', std_devs(i), highest_severities(i), lowest_severities(i)), ...
        'HorizontalAlignment', 'center', 'VerticalAlignment', 'top');
end
